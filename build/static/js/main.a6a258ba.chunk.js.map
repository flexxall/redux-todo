{"version":3,"sources":["App.js","actions/TodoActions.js","reducer/TodoReducer.js","store.js","index.js"],"names":["App","useState","todo","setTodo","dispatch","useDispatch","todos","useSelector","state","Todo","className","onSubmit","e","preventDefault","getState","find","i","type","payload","id","AddTodoAction","value","placeholder","style","width","padding","borderRadius","border","fontSize","onChange","target","marginLeft","map","t","color","backgroundColor","onClick","filter","RemoveTodoAction","removeHandler","TodoReducer","action","reducer","combineReducers","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"yOA+EeA,MA1Ef,WACE,MAAwBC,qBAAxB,mBAAOC,EAAP,KAAaC,EAAb,KACMC,EAAWC,cAETC,EADKC,aAAY,SAACC,GAAD,OAAWA,EAAMC,QAClCH,MAYR,OACE,qBAAKI,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,wDACA,uBAAMC,SAdS,SAACC,GACpBA,EAAEC,iBACFT,ECbyB,SAACF,GAAD,OAAU,SAACE,EAAUU,GAChD,IACUR,EACNQ,IADFL,KAAQH,MAGMA,EAAMS,MAAK,SAACC,GAAD,OAAOA,EAAEd,OAASA,MAEpB,KAATA,GACdE,EAAS,CACPa,KAAM,WACNC,QAAQ,CAAE,CAAEC,GAAIjB,EAAMA,SAAf,mBAA0BI,ODG1Bc,CAAclB,IACvBC,EAAQ,KAWJ,UACE,uBACEgB,GAAG,OACHE,MAAOnB,EACPoB,YAAY,eACZC,MAAO,CACLC,MAAO,IACPC,QAAS,GACTC,aAAc,GACdC,OAAQ,OACRC,SAAU,IAEZC,SAAU,SAACjB,GAAD,OAAOT,EAAQS,EAAEkB,OAAOT,UAEpC,wBACEJ,KAAK,SACLM,MAAO,CACLE,QAAS,GACTC,aAAc,GACdC,OAAQ,OACRC,SAAU,GACVG,WAAY,IAPhB,oBAaF,oBAAIrB,UAAU,WAAd,SACGJ,GACCA,EAAM0B,KAAI,SAACC,GAAD,OACR,qBAAevB,UAAU,aAAzB,UACE,sBAAMA,UAAU,WAAhB,SAA4BuB,EAAE/B,OAC9B,wBACEqB,MAAO,CACLE,QAAS,GACTC,aAAc,GACdC,OAAQ,kBACRO,MAAO,QACPC,gBAAiB,YACjBP,SAAU,GACVG,WAAY,IAEdK,QAAS,kBAlDH,SAACH,GACrB7B,ECH4B,SAACF,GAAD,OAAU,SAACE,EAAUU,GAKnDV,EAAS,CACPa,KAAM,cACNC,QAJEJ,IADFL,KAAQH,MAKO+B,QAAO,SAACJ,GAAD,OAAOA,EAAEd,KAAOjB,EAAKiB,SDJlCmB,CAAiBL,IAiDGM,CAAcN,IAV/B,sBAFOA,EAAEd,e,uBE5CVqB,EAXK,WAAoC,IAAnChC,EAAkC,uDAA1B,CAAEF,MAAO,IAAMmC,EAAW,uCACrD,OAAQA,EAAOxB,MACb,IAAK,WAEL,IAAK,cACH,MAAO,CAAEX,MAAOmC,EAAOvB,SACzB,QACE,OAAOV,ICFPkC,EAAUC,0BAAgB,CAC9BlC,KAAM+B,IAKFI,EAAa,CAACC,KAQLC,EANDC,sBACZL,EALmB,GAOnBM,8BAAoBC,kBAAe,WAAf,EAAmBL,KCTzCM,IAASC,OACP,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFM,SAASC,eAAe,W","file":"static/js/main.a6a258ba.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AddTodoAction, RemoveTodoAction } from \"./actions/TodoActions\";\nimport \"./App.css\";\n\nfunction App() {\n  const [todo, setTodo] = useState();\n  const dispatch = useDispatch();\n  const Todo = useSelector((state) => state.Todo);\n  const { todos } = Todo;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(AddTodoAction(todo));\n    setTodo(\"\");\n  };\n\n  const removeHandler = (t) => {\n    dispatch(RemoveTodoAction(t));\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h2>Todo List App in Redux</h2>\n        <form onSubmit={handleSubmit}>\n          <input\n            id=\"todo\"\n            value={todo}\n            placeholder=\"Enter a Todo\"\n            style={{\n              width: 350,\n              padding: 10,\n              borderRadius: 20,\n              border: \"none\",\n              fontSize: 20,\n            }}\n            onChange={(e) => setTodo(e.target.value)}\n          />\n          <button\n            type=\"submit\"\n            style={{\n              padding: 12,\n              borderRadius: 25,\n              border: \"none\",\n              fontSize: 15,\n              marginLeft: 20,\n            }}\n          >\n            Add\n          </button>\n        </form>\n        <ul className=\"allTodos\">\n          {todos &&\n            todos.map((t) => (\n              <li key={t.id} className=\"singleTodo\">\n                <span className=\"todoText\">{t.todo}</span>\n                <button\n                  style={{\n                    padding: 10,\n                    borderRadius: 25,\n                    border: \"1px solid white\",\n                    color: \"white\",\n                    backgroundColor: \"orangered\",\n                    fontSize: 15,\n                    marginLeft: 20,\n                  }}\n                  onClick={() => removeHandler(t)}\n                >\n                  Delete\n                </button>\n              </li>\n            ))}\n        </ul>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","export const AddTodoAction = (todo) => (dispatch, getState) => {\r\n  const {\r\n    Todo: { todos },\r\n  } = getState();\r\n\r\n  const hasTodo = todos.find((i) => i.todo === todo);\r\n\r\n  if (!hasTodo && todo !== \"\") {\r\n    dispatch({\r\n      type: \"ADD_TODO\",\r\n      payload: [{ id: todo, todo }, ...todos],\r\n    });\r\n  }\r\n};\r\n\r\nexport const RemoveTodoAction = (todo) => (dispatch, getState) => {\r\n  const {\r\n    Todo: { todos },\r\n  } = getState();\r\n\r\n  dispatch({\r\n    type: \"REMOVE_TODO\",\r\n    payload: todos.filter((t) => t.id !== todo.id),\r\n  });\r\n};\r\n","const TodoReducer = (state = { todos: [] }, action) => {\r\n  switch (action.type) {\r\n    case \"ADD_TODO\":\r\n      return { todos: action.payload };\r\n    case \"REMOVE_TODO\":\r\n      return { todos: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default TodoReducer;\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport TodoReducer from \"./reducer/TodoReducer\";\r\n\r\nconst reducer = combineReducers({\r\n  Todo: TodoReducer,\r\n});\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}